// Generated by CoffeeScript 1.7.1
var RequestAjax, RequestAjaxWithParam, getQueryString;

window.scoreHints = ['难看', '不好看', '一般', '好书', '神作'];

window.scoreNoRatedMsg = "尚无评分";

getQueryString = function(name) {
  var r, reg, url;
  reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
  url = decodeURI(window.location.search, "UTF-8");
  r = url.substr(1).match(reg);
  if (r !== null) {
    return escape(r[2]);
  }
  return null;
};

RequestAjax = function(type, url, data, successCallback, failCallback, timeoutCallback, beforeAction, afterAction, dontAlertOnStatusCode, async) {
  var rawData;
  data.csrf_token = window.csrfToken;
  rawData = {
    Path: url,
    Data: data
  };
  $.ajax({
    async: async != null ? async : true,
    type: type,
    url: "http://test.shanpow.com" + (encodeURI(url != null ? url : "/")),
    cache: false,
    data: data,
    statusCode: {
      400: (function() {
        if (!dontAlertOnStatusCode) {
          return alert("400: 请求不正确");
        }
      }),
      404: (function() {
        if (!dontAlertOnStatusCode) {
          return alert("404: 该资源不存在");
        }
      }),
      500: (function() {
        if (!dontAlertOnStatusCode) {
          return alert("500: 服务器遇到一个内部错误，请稍等一会再试试");
        }
      })
    },
    success: (function(data) {
      var _ref;
      if (data.Result === true) {
        if (successCallback != null) {
          successCallback(data, rawData);
        } else {
          location.reload();
        }
      } else {
        if (failCallback != null) {
          failCallback(data, rawData);
        } else {
          alert((_ref = data.ErrorMsg) != null ? _ref : "网络发生故障，请稍后重新尝试");
        }
      }
    }),
    dataType: "json",
    timeout: 4000,
    error: (function(jqXHR, textStatus, errorThrown) {
      if (textStatus === "timeout") {
        if (timeoutCallback != null) {
          timeoutCallback(errorThrown);
        } else {
          if (typeof failCallback === "function") {
            failCallback(data, rawData);
          }
        }
      }
      if (textStatus === "error") {
        if (typeof failCallback === "function") {
          failCallback(errorThrown);
        }
      }
    }),
    beforeSend: (function(jqXHR, settings) {
      if (typeof beforeAction === "function") {
        beforeAction(jqXHR, settings);
      }
    }),
    complete: (function(jqXHR, textStatus) {
      if (typeof afterAction === "function") {
        afterAction(jqXHR, textStatus);
      }
    })
  });
};

RequestAjaxWithParam = function(options) {
  var rawData, _ref, _ref1, _ref2, _ref3;
  if (options.data != null) {
    options.data.csrf_token = window.csrfToken;
  } else {
    options.data = {
      csrf_token: window.csrfToken
    };
  }
  rawData = {
    Path: (_ref = options.url) != null ? _ref : "/",
    Data: options.data
  };
  $.ajax({
    async: (_ref1 = options.async) != null ? _ref1 : true,
    type: (_ref2 = options.type) != null ? _ref2 : "GET",
    url: "http://www.shanpow.com" + (encodeURI((_ref3 = options.url) != null ? _ref3 : "/")),
    cache: false,
    data: options.data,
    statusCode: {
      400: (function() {
        if (!options.dontAlertOnStatusCode) {
          return alert("400: 请求不正确");
        }
      }),
      404: (function() {
        if (!options.dontAlertOnStatusCode) {
          return alert("404: 该资源不存在");
        }
      }),
      500: (function() {
        if (!options.dontAlertOnStatusCode) {
          return alert("500: 服务器遇到一个内部错误，请稍等一会再试试");
        }
      })
    },
    success: (function(data) {
      var _ref4;
      if (data.Result === true) {
        if (options.successCallback != null) {
          options.successCallback(data, rawData);
        } else {
          location.reload();
        }
      } else {
        if (options.failCallback != null) {
          options.failCallback(data, rawData);
        } else {
          alert((_ref4 = data.ErrorMsg) != null ? _ref4 : "网络发生故障，请稍后重新尝试");
        }
      }
    }),
    dataType: "json",
    timeout: 4000,
    error: (function(jqXHR, textStatus, errorThrown) {
      if (textStatus === "timeout") {
        if (options.timeoutCallback != null) {
          options.timeoutCallback(errorThrown);
        } else {
          if (typeof options.failCallback === "function") {
            options.failCallback(data, rawData);
          }
        }
      }
      if (textStatus === "error") {
        if (typeof options.failCallback === "function") {
          options.failCallback(errorThrown);
        }
      }
    }),
    beforeSend: (function(jqXHR, settings) {
      if (typeof options.beforeAction === "function") {
        options.beforeAction(jqXHR, settings);
      }
    }),
    complete: (function(jqXHR, textStatus) {
      if (typeof options.afterAction === "function") {
        options.afterAction(jqXHR, textStatus);
      }
    })
  });
};

$(document).ready(function() {
  $(document).on("click tap", ".actionbar .back", null, function() {
    return window.history.back(1);
  });
});
